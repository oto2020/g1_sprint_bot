require('dotenv').config();
const TelegramBot = require('node-telegram-bot-api');
const GoogleHelper = require('./GoogleHelper');

const token = process.env.TELEGRAM_TOKEN;
const spreadsheetId = process.env.SPREADSHEET_ID;
const referenceBookGid = Number(process.env.REFERENCE_BOOK_GID);

const bot = new TelegramBot(token, { polling: true });

const users = {};

(async () => {
    // –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Google API –ø–µ—Ä–µ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –∫–æ–º–∞–Ω–¥
    await GoogleHelper.init(spreadsheetId);

    let sheets = await GoogleHelper.getAllSheetNamesAndGids();
    console.log('üìÑ –°–ø–∏—Å–æ–∫ –ª–∏—Å—Ç–æ–≤ –≤ —Ç–∞–±–ª–∏—Ü–µ:');
    console.table(sheets);

    let lastSprintNumber = GoogleHelper.getLastSprintNumber();
    let currentSprintNumber = GoogleHelper.getCurrentSprintNumber();
    let nextSprintNumber = GoogleHelper.getNextSprintNumber();
    console.log('–ü—Ä–æ—à–ª—ã–π —Å–ø—Ä–∏–Ω—Ç:', lastSprintNumber);
    console.log('–¢–µ–∫—É—â–∏–π —Å–ø—Ä–∏–Ω—Ç:', currentSprintNumber);
    console.log('–°–ª–µ–¥—É—é—â–∏–π —Å–ø—Ä–∏–Ω—Ç:', nextSprintNumber);

    const lastSprintGid = sheets.find(s => new RegExp(`—Å–ø—Ä–∏–Ω—Ç ${lastSprintNumber} `).test(s.title));
    const currentSprintGid = sheets.find(s => new RegExp(`—Å–ø—Ä–∏–Ω—Ç ${currentSprintNumber} `).test(s.title));
    const nextSprintGid = sheets.find(s => new RegExp(`—Å–ø—Ä–∏–Ω—Ç ${nextSprintNumber} `).test(s.title));

    console.log('–ü—Ä–æ—à–ª—ã–π —Å–ø—Ä–∏–Ω—Ç:', lastSprintGid);
    console.log('–¢–µ–∫—É—â–∏–π —Å–ø—Ä–∏–Ω—Ç:', currentSprintGid);
    console.log('–°–ª–µ–¥—É—é—â–∏–π —Å–ø—Ä–∏–Ω—Ç:', nextSprintGid);

    bot.onText(/\/start/, async (msg) => {
        const chatId = msg.chat.id;

        const keyboard = {
            reply_markup: {
                one_time_keyboard: true,
                keyboard: [[{
                    text: '–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º',
                    request_contact: true
                }]]
            }
        };

        // –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∏–∑–≤–µ—Å—Ç–µ–Ω
        if (users[chatId]) {
            console.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞ –∏ –æ–Ω —É–∂–µ –∏–∑–≤–µ—Å—Ç–µ–Ω: `);
            console.log(users[chatId]);
            bot.sendMessage(chatId,
                `üëã –ü—Ä–∏–≤–µ—Ç!\n\n–¢—ã –∏–∑ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è: <b>${users[chatId].department}</b>\n` +
                `üìû –ù–æ–º–µ—Ä: <b>${users[chatId].number}</b>\n` + 
                `üìß Email: <b>${users[chatId].email || '–Ω–µ —É–∫–∞–∑–∞–Ω'}</b>\n` + 
                `–ß—Ç–æ–±—ã –∞–∫—Ç—É–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ –≥—É–≥–ª-—Ç–∞–±–ª–∏—Ü—ã –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å –∫–æ–Ω—Ç–∞–∫—Ç–æ–º –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ –±–æ—Ç–∞`,
                { parse_mode: 'HTML' }
            );
        }

        bot.sendMessage(chatId, '–ü—Ä–∏–≤–µ—Ç! –ß—Ç–æ–±—ã —Ç–µ–±—è —É–∑–Ω–∞—Ç—å, –ø–æ–¥–µ–ª–∏—Å—å –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞.', keyboard);
    });

    bot.on('contact', async (msg) => {
        const phone = msg.contact.phone_number.replace(/\D/g, '');
        const chatId = msg.chat.id;

        // –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∏–∑–≤–µ—Å—Ç–µ–Ω
        if (users[chatId]) {
            console.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–µ–ª–∏–ª—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º, –Ω–æ –æ–Ω —É–∂–µ –∏–∑–≤–µ—Å—Ç–µ–Ω: `);
            console.log(users[chatId]);
        }

        try {
            const sheetName = await GoogleHelper.getSheetNameByGid(referenceBookGid);
            if (!sheetName) throw new Error('–õ–∏—Å—Ç —Å –∑–∞–¥–∞–Ω–Ω—ã–º GID –Ω–µ –Ω–∞–π–¥–µ–Ω');

            const res = await GoogleHelper.gsapi.spreadsheets.values.get({
                spreadsheetId,
                range: `${sheetName}!A2:C`
            });

            const rows = res.data.values || [];
            const match = rows.find(row => row[1]?.replace(/\D/g, '') === phone);

            if (match) {
                const [department, number, email] = match;
                bot.sendMessage(chatId,
                    `üëã –ü—Ä–∏–≤–µ—Ç!\n\n–¢—ã –∏–∑ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è: <b>${department}</b>\nüìû –ù–æ–º–µ—Ä: <b>${number}</b>\nüìß Email: <b>${email || '–Ω–µ —É–∫–∞–∑–∞–Ω'}</b>`,
                    { parse_mode: 'HTML' }
                );

                // –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω, –∑–∞–ø–æ–º–∏–Ω–∞–µ–º –µ–≥–æ
                users[chatId] = {
                    department, number, email
                }
                console.log(`–°–æ—Ö—Ä–∞–Ω–∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: `);
                console.log(users[chatId]);

            } else {
                bot.sendMessage(chatId, 'üòï –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ç–µ–±—è –≤ —Å–ø–∏—Å–∫–µ.');
            }

        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–Ω—Ç–∞–∫—Ç–∞:', error);
            bot.sendMessage(chatId, 'üö® –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –Ω–æ–º–µ—Ä–∞. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.');
        }
    });
})();
